/*
 * generated by Xtext 2.32.0
 */
grammar InternalPDL3;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package fr.n7.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.n7.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import fr.n7.services.PDL3GrammarAccess;

}
@parser::members {
	private PDL3GrammarAccess grammarAccess;

	public void setGrammarAccess(PDL3GrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProcess
entryRuleProcess
:
{ before(grammarAccess.getProcessRule()); }
	 ruleProcess
{ after(grammarAccess.getProcessRule()); } 
	 EOF 
;

// Rule Process
ruleProcess 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessAccess().getGroup()); }
		(rule__Process__Group__0)
		{ after(grammarAccess.getProcessAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleResourceUsages
entryRuleResourceUsages
:
{ before(grammarAccess.getResourceUsagesRule()); }
	 ruleResourceUsages
{ after(grammarAccess.getResourceUsagesRule()); } 
	 EOF 
;

// Rule ResourceUsages
ruleResourceUsages 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResourceUsagesAccess().getGroup()); }
		(rule__ResourceUsages__Group__0)
		{ after(grammarAccess.getResourceUsagesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleResourceUsage
entryRuleResourceUsage
:
{ before(grammarAccess.getResourceUsageRule()); }
	 ruleResourceUsage
{ after(grammarAccess.getResourceUsageRule()); } 
	 EOF 
;

// Rule ResourceUsage
ruleResourceUsage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResourceUsageAccess().getGroup()); }
		(rule__ResourceUsage__Group__0)
		{ after(grammarAccess.getResourceUsageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleResources
entryRuleResources
:
{ before(grammarAccess.getResourcesRule()); }
	 ruleResources
{ after(grammarAccess.getResourcesRule()); } 
	 EOF 
;

// Rule Resources
ruleResources 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResourcesAccess().getGroup()); }
		(rule__Resources__Group__0)
		{ after(grammarAccess.getResourcesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleResource
entryRuleResource
:
{ before(grammarAccess.getResourceRule()); }
	 ruleResource
{ after(grammarAccess.getResourceRule()); } 
	 EOF 
;

// Rule Resource
ruleResource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResourceAccess().getGroup()); }
		(rule__Resource__Group__0)
		{ after(grammarAccess.getResourceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWorkDefinitions
entryRuleWorkDefinitions
:
{ before(grammarAccess.getWorkDefinitionsRule()); }
	 ruleWorkDefinitions
{ after(grammarAccess.getWorkDefinitionsRule()); } 
	 EOF 
;

// Rule WorkDefinitions
ruleWorkDefinitions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWorkDefinitionsAccess().getGroup()); }
		(rule__WorkDefinitions__Group__0)
		{ after(grammarAccess.getWorkDefinitionsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWorkDefinition
entryRuleWorkDefinition
:
{ before(grammarAccess.getWorkDefinitionRule()); }
	 ruleWorkDefinition
{ after(grammarAccess.getWorkDefinitionRule()); } 
	 EOF 
;

// Rule WorkDefinition
ruleWorkDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWorkDefinitionAccess().getNameAssignment()); }
		(rule__WorkDefinition__NameAssignment)
		{ after(grammarAccess.getWorkDefinitionAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWorkSequences
entryRuleWorkSequences
:
{ before(grammarAccess.getWorkSequencesRule()); }
	 ruleWorkSequences
{ after(grammarAccess.getWorkSequencesRule()); } 
	 EOF 
;

// Rule WorkSequences
ruleWorkSequences 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWorkSequencesAccess().getGroup()); }
		(rule__WorkSequences__Group__0)
		{ after(grammarAccess.getWorkSequencesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWorkSequence
entryRuleWorkSequence
:
{ before(grammarAccess.getWorkSequenceRule()); }
	 ruleWorkSequence
{ after(grammarAccess.getWorkSequenceRule()); } 
	 EOF 
;

// Rule WorkSequence
ruleWorkSequence 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWorkSequenceAccess().getGroup()); }
		(rule__WorkSequence__Group__0)
		{ after(grammarAccess.getWorkSequenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule WorkSequenceKind
ruleWorkSequenceKind
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkSequenceKindAccess().getAlternatives()); }
		(rule__WorkSequenceKind__Alternatives)
		{ after(grammarAccess.getWorkSequenceKindAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkSequenceKind__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkSequenceKindAccess().getFinishToStartEnumLiteralDeclaration_0()); }
		('f2s')
		{ after(grammarAccess.getWorkSequenceKindAccess().getFinishToStartEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getWorkSequenceKindAccess().getFinishToFinishEnumLiteralDeclaration_1()); }
		('f2f')
		{ after(grammarAccess.getWorkSequenceKindAccess().getFinishToFinishEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getWorkSequenceKindAccess().getStartToStartEnumLiteralDeclaration_2()); }
		('s2s')
		{ after(grammarAccess.getWorkSequenceKindAccess().getStartToStartEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getWorkSequenceKindAccess().getStartToFinishEnumLiteralDeclaration_3()); }
		('s2f')
		{ after(grammarAccess.getWorkSequenceKindAccess().getStartToFinishEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__0__Impl
	rule__Process__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getProcessKeyword_0()); }
	'process'
	{ after(grammarAccess.getProcessAccess().getProcessKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__1__Impl
	rule__Process__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getProcessAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__2__Impl
	rule__Process__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getNameAssignment_2()); }
	(rule__Process__NameAssignment_2)
	{ after(grammarAccess.getProcessAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__3__Impl
	rule__Process__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getResourcesKeyword_3()); }
	'resources'
	{ after(grammarAccess.getProcessAccess().getResourcesKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__4__Impl
	rule__Process__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getColonKeyword_4()); }
	':'
	{ after(grammarAccess.getProcessAccess().getColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__5__Impl
	rule__Process__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getProcessElementsAssignment_5()); }
	(rule__Process__ProcessElementsAssignment_5)*
	{ after(grammarAccess.getProcessAccess().getProcessElementsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__6__Impl
	rule__Process__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getWorkdefinitionsKeyword_6()); }
	'workdefinitions'
	{ after(grammarAccess.getProcessAccess().getWorkdefinitionsKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__7__Impl
	rule__Process__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getColonKeyword_7()); }
	':'
	{ after(grammarAccess.getProcessAccess().getColonKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__8__Impl
	rule__Process__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getProcessElementsAssignment_8()); }
	(rule__Process__ProcessElementsAssignment_8)*
	{ after(grammarAccess.getProcessAccess().getProcessElementsAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__9__Impl
	rule__Process__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getResourceusagesKeyword_9()); }
	'resourceusages'
	{ after(grammarAccess.getProcessAccess().getResourceusagesKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__10__Impl
	rule__Process__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getColonKeyword_10()); }
	':'
	{ after(grammarAccess.getProcessAccess().getColonKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__11__Impl
	rule__Process__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getProcessElementsAssignment_11()); }
	(rule__Process__ProcessElementsAssignment_11)*
	{ after(grammarAccess.getProcessAccess().getProcessElementsAssignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__12__Impl
	rule__Process__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getWorksequencesKeyword_12()); }
	'worksequences'
	{ after(grammarAccess.getProcessAccess().getWorksequencesKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__13__Impl
	rule__Process__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getColonKeyword_13()); }
	':'
	{ after(grammarAccess.getProcessAccess().getColonKeyword_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__14__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getProcessElementsAssignment_14()); }
	(rule__Process__ProcessElementsAssignment_14)*
	{ after(grammarAccess.getProcessAccess().getProcessElementsAssignment_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceUsages__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResourceUsages__Group__0__Impl
	rule__ResourceUsages__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceUsages__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceUsagesAccess().getResourceUsageParserRuleCall_0()); }
	ruleResourceUsage
	{ after(grammarAccess.getResourceUsagesAccess().getResourceUsageParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceUsages__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResourceUsages__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceUsages__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceUsagesAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getResourceUsagesAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ResourceUsage__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResourceUsage__Group__0__Impl
	rule__ResourceUsage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceUsage__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceUsageAccess().getWorkDefinitionAssignment_0()); }
	(rule__ResourceUsage__WorkDefinitionAssignment_0)
	{ after(grammarAccess.getResourceUsageAccess().getWorkDefinitionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceUsage__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResourceUsage__Group__1__Impl
	rule__ResourceUsage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceUsage__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceUsageAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getResourceUsageAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceUsage__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResourceUsage__Group__2__Impl
	rule__ResourceUsage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceUsage__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceUsageAccess().getResourceAssignment_2()); }
	(rule__ResourceUsage__ResourceAssignment_2)
	{ after(grammarAccess.getResourceUsageAccess().getResourceAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceUsage__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResourceUsage__Group__3__Impl
	rule__ResourceUsage__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceUsage__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceUsageAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getResourceUsageAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceUsage__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResourceUsage__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceUsage__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceUsageAccess().getNeededAssignment_4()); }
	(rule__ResourceUsage__NeededAssignment_4)
	{ after(grammarAccess.getResourceUsageAccess().getNeededAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Resources__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Resources__Group__0__Impl
	rule__Resources__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Resources__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourcesAccess().getResourceParserRuleCall_0()); }
	ruleResource
	{ after(grammarAccess.getResourcesAccess().getResourceParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Resources__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Resources__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Resources__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourcesAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getResourcesAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Resource__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Resource__Group__0__Impl
	rule__Resource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceAccess().getNameAssignment_0()); }
	(rule__Resource__NameAssignment_0)
	{ after(grammarAccess.getResourceAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Resource__Group__1__Impl
	rule__Resource__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getResourceAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Resource__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceAccess().getTotalAssignment_2()); }
	(rule__Resource__TotalAssignment_2)
	{ after(grammarAccess.getResourceAccess().getTotalAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WorkDefinitions__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WorkDefinitions__Group__0__Impl
	rule__WorkDefinitions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkDefinitions__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkDefinitionsAccess().getWorkDefinitionParserRuleCall_0()); }
	ruleWorkDefinition
	{ after(grammarAccess.getWorkDefinitionsAccess().getWorkDefinitionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkDefinitions__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WorkDefinitions__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkDefinitions__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkDefinitionsAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getWorkDefinitionsAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WorkSequences__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WorkSequences__Group__0__Impl
	rule__WorkSequences__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkSequences__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkSequencesAccess().getWorkSequenceParserRuleCall_0()); }
	ruleWorkSequence
	{ after(grammarAccess.getWorkSequencesAccess().getWorkSequenceParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkSequences__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WorkSequences__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkSequences__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkSequencesAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getWorkSequencesAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WorkSequence__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WorkSequence__Group__0__Impl
	rule__WorkSequence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkSequence__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkSequenceAccess().getLinkToPredecessorAssignment_0()); }
	(rule__WorkSequence__LinkToPredecessorAssignment_0)
	{ after(grammarAccess.getWorkSequenceAccess().getLinkToPredecessorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkSequence__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WorkSequence__Group__1__Impl
	rule__WorkSequence__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkSequence__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkSequenceAccess().getLinkTypeAssignment_1()); }
	(rule__WorkSequence__LinkTypeAssignment_1)
	{ after(grammarAccess.getWorkSequenceAccess().getLinkTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkSequence__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WorkSequence__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkSequence__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkSequenceAccess().getLinkToSucessorAssignment_2()); }
	(rule__WorkSequence__LinkToSucessorAssignment_2)
	{ after(grammarAccess.getWorkSequenceAccess().getLinkToSucessorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Process__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getProcessAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__ProcessElementsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getProcessElementsResourcesParserRuleCall_5_0()); }
		ruleResources
		{ after(grammarAccess.getProcessAccess().getProcessElementsResourcesParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__ProcessElementsAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getProcessElementsWorkDefinitionsParserRuleCall_8_0()); }
		ruleWorkDefinitions
		{ after(grammarAccess.getProcessAccess().getProcessElementsWorkDefinitionsParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__ProcessElementsAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getProcessElementsResourceUsagesParserRuleCall_11_0()); }
		ruleResourceUsages
		{ after(grammarAccess.getProcessAccess().getProcessElementsResourceUsagesParserRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__ProcessElementsAssignment_14
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getProcessElementsWorkSequencesParserRuleCall_14_0()); }
		ruleWorkSequences
		{ after(grammarAccess.getProcessAccess().getProcessElementsWorkSequencesParserRuleCall_14_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceUsage__WorkDefinitionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResourceUsageAccess().getWorkDefinitionWorkDefinitionCrossReference_0_0()); }
		(
			{ before(grammarAccess.getResourceUsageAccess().getWorkDefinitionWorkDefinitionIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getResourceUsageAccess().getWorkDefinitionWorkDefinitionIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getResourceUsageAccess().getWorkDefinitionWorkDefinitionCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceUsage__ResourceAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResourceUsageAccess().getResourceResourceCrossReference_2_0()); }
		(
			{ before(grammarAccess.getResourceUsageAccess().getResourceResourceIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getResourceUsageAccess().getResourceResourceIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getResourceUsageAccess().getResourceResourceCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceUsage__NeededAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResourceUsageAccess().getNeededINTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getResourceUsageAccess().getNeededINTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResourceAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getResourceAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__TotalAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResourceAccess().getTotalINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getResourceAccess().getTotalINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkDefinition__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkDefinitionAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getWorkDefinitionAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkSequence__LinkToPredecessorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkSequenceAccess().getLinkToPredecessorWorkDefinitionCrossReference_0_0()); }
		(
			{ before(grammarAccess.getWorkSequenceAccess().getLinkToPredecessorWorkDefinitionIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getWorkSequenceAccess().getLinkToPredecessorWorkDefinitionIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getWorkSequenceAccess().getLinkToPredecessorWorkDefinitionCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkSequence__LinkTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkSequenceAccess().getLinkTypeWorkSequenceKindEnumRuleCall_1_0()); }
		ruleWorkSequenceKind
		{ after(grammarAccess.getWorkSequenceAccess().getLinkTypeWorkSequenceKindEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkSequence__LinkToSucessorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkSequenceAccess().getLinkToSucessorWorkDefinitionCrossReference_2_0()); }
		(
			{ before(grammarAccess.getWorkSequenceAccess().getLinkToSucessorWorkDefinitionIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getWorkSequenceAccess().getLinkToSucessorWorkDefinitionIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getWorkSequenceAccess().getLinkToSucessorWorkDefinitionCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
