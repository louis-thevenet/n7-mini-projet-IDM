/**
 * generated by Xtext 2.32.0
 */
package fr.n7.pDL3.impl;

import fr.n7.pDL3.PDL3Package;
import fr.n7.pDL3.WorkDefinition;
import fr.n7.pDL3.WorkSequence;
import fr.n7.pDL3.WorkSequenceKind;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Work Sequence</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.n7.pDL3.impl.WorkSequenceImpl#getLinkToPredecessor <em>Link To Predecessor</em>}</li>
 *   <li>{@link fr.n7.pDL3.impl.WorkSequenceImpl#getLinkType <em>Link Type</em>}</li>
 *   <li>{@link fr.n7.pDL3.impl.WorkSequenceImpl#getLinkToSucessor <em>Link To Sucessor</em>}</li>
 * </ul>
 *
 * @generated
 */
public class WorkSequenceImpl extends WorkSequencesImpl implements WorkSequence
{
  /**
   * The cached value of the '{@link #getLinkToPredecessor() <em>Link To Predecessor</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLinkToPredecessor()
   * @generated
   * @ordered
   */
  protected WorkDefinition linkToPredecessor;

  /**
   * The default value of the '{@link #getLinkType() <em>Link Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLinkType()
   * @generated
   * @ordered
   */
  protected static final WorkSequenceKind LINK_TYPE_EDEFAULT = WorkSequenceKind.FINISH_TO_START;

  /**
   * The cached value of the '{@link #getLinkType() <em>Link Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLinkType()
   * @generated
   * @ordered
   */
  protected WorkSequenceKind linkType = LINK_TYPE_EDEFAULT;

  /**
   * The cached value of the '{@link #getLinkToSucessor() <em>Link To Sucessor</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLinkToSucessor()
   * @generated
   * @ordered
   */
  protected WorkDefinition linkToSucessor;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected WorkSequenceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PDL3Package.Literals.WORK_SEQUENCE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public WorkDefinition getLinkToPredecessor()
  {
    if (linkToPredecessor != null && linkToPredecessor.eIsProxy())
    {
      InternalEObject oldLinkToPredecessor = (InternalEObject)linkToPredecessor;
      linkToPredecessor = (WorkDefinition)eResolveProxy(oldLinkToPredecessor);
      if (linkToPredecessor != oldLinkToPredecessor)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, PDL3Package.WORK_SEQUENCE__LINK_TO_PREDECESSOR, oldLinkToPredecessor, linkToPredecessor));
      }
    }
    return linkToPredecessor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public WorkDefinition basicGetLinkToPredecessor()
  {
    return linkToPredecessor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLinkToPredecessor(WorkDefinition newLinkToPredecessor)
  {
    WorkDefinition oldLinkToPredecessor = linkToPredecessor;
    linkToPredecessor = newLinkToPredecessor;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PDL3Package.WORK_SEQUENCE__LINK_TO_PREDECESSOR, oldLinkToPredecessor, linkToPredecessor));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public WorkSequenceKind getLinkType()
  {
    return linkType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLinkType(WorkSequenceKind newLinkType)
  {
    WorkSequenceKind oldLinkType = linkType;
    linkType = newLinkType == null ? LINK_TYPE_EDEFAULT : newLinkType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PDL3Package.WORK_SEQUENCE__LINK_TYPE, oldLinkType, linkType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public WorkDefinition getLinkToSucessor()
  {
    if (linkToSucessor != null && linkToSucessor.eIsProxy())
    {
      InternalEObject oldLinkToSucessor = (InternalEObject)linkToSucessor;
      linkToSucessor = (WorkDefinition)eResolveProxy(oldLinkToSucessor);
      if (linkToSucessor != oldLinkToSucessor)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, PDL3Package.WORK_SEQUENCE__LINK_TO_SUCESSOR, oldLinkToSucessor, linkToSucessor));
      }
    }
    return linkToSucessor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public WorkDefinition basicGetLinkToSucessor()
  {
    return linkToSucessor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLinkToSucessor(WorkDefinition newLinkToSucessor)
  {
    WorkDefinition oldLinkToSucessor = linkToSucessor;
    linkToSucessor = newLinkToSucessor;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PDL3Package.WORK_SEQUENCE__LINK_TO_SUCESSOR, oldLinkToSucessor, linkToSucessor));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PDL3Package.WORK_SEQUENCE__LINK_TO_PREDECESSOR:
        if (resolve) return getLinkToPredecessor();
        return basicGetLinkToPredecessor();
      case PDL3Package.WORK_SEQUENCE__LINK_TYPE:
        return getLinkType();
      case PDL3Package.WORK_SEQUENCE__LINK_TO_SUCESSOR:
        if (resolve) return getLinkToSucessor();
        return basicGetLinkToSucessor();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PDL3Package.WORK_SEQUENCE__LINK_TO_PREDECESSOR:
        setLinkToPredecessor((WorkDefinition)newValue);
        return;
      case PDL3Package.WORK_SEQUENCE__LINK_TYPE:
        setLinkType((WorkSequenceKind)newValue);
        return;
      case PDL3Package.WORK_SEQUENCE__LINK_TO_SUCESSOR:
        setLinkToSucessor((WorkDefinition)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PDL3Package.WORK_SEQUENCE__LINK_TO_PREDECESSOR:
        setLinkToPredecessor((WorkDefinition)null);
        return;
      case PDL3Package.WORK_SEQUENCE__LINK_TYPE:
        setLinkType(LINK_TYPE_EDEFAULT);
        return;
      case PDL3Package.WORK_SEQUENCE__LINK_TO_SUCESSOR:
        setLinkToSucessor((WorkDefinition)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PDL3Package.WORK_SEQUENCE__LINK_TO_PREDECESSOR:
        return linkToPredecessor != null;
      case PDL3Package.WORK_SEQUENCE__LINK_TYPE:
        return linkType != LINK_TYPE_EDEFAULT;
      case PDL3Package.WORK_SEQUENCE__LINK_TO_SUCESSOR:
        return linkToSucessor != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (linkType: ");
    result.append(linkType);
    result.append(')');
    return result.toString();
  }

} //WorkSequenceImpl
